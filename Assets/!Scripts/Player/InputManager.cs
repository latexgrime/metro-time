using System;
using NALEO._Scripts.Camera;
using NALEO._Scripts.Player;
using UnityEngine;

namespace NALEO._Scripts
{
    public class InputManager : MonoBehaviour
    {
        // Reference to the Player Controls C# script generated by the new Input System class by Unity.
        private PlayerControls _playerControls;
        private PlayerMovement _playerMovement;

        public Vector2 movementInput;
        public Vector2 cameraInput;

        [Header("- Camera Input")] public float cameraInputX;
        public float cameraInputY;

        [Header("- Moving Input")] public float moveAmount;
        public float verticalInput;
        public float horizontalInput;

        [Header("- Player Actions Input")] public bool sprintInput;
        public bool walkInput;
        public bool jumpInput;
        public bool dashInput;
        public bool interactInput;
        public bool crouchInput;
        public bool zoomInput;
        public bool throwInput;

        private void OnEnable()
        {
            if (_playerControls == null)
            {
                _playerControls = new PlayerControls();

                // Movement callback context.
                _playerControls.PlayerMovement.Movement.performed += i => movementInput = i.ReadValue<Vector2>();

                // Camera callback context.
                _playerControls.PlayerMovement.Camera.performed += i => cameraInput = i.ReadValue<Vector2>();

                // Sprint callback context.
                _playerControls.PlayerActions.Sprint.performed += i => sprintInput = true;
                _playerControls.PlayerActions.Sprint.canceled += i => sprintInput = false;

                // Jump callback context.
                _playerControls.PlayerActions.Jump.performed += i => jumpInput = true;
                _playerControls.PlayerActions.Jump.canceled += i => jumpInput = false;

                // Crouch callback context.
                _playerControls.PlayerActions.Crouch.performed += i => crouchInput = true;
                _playerControls.PlayerActions.Crouch.canceled += i => crouchInput = false;

                // Dash callback context.
                _playerControls.PlayerActions.Dash.performed += i => dashInput = true;
                _playerControls.PlayerActions.Dash.canceled += i => dashInput = false;

                // Interact with items context.
                _playerControls.PlayerActions.Interact.performed += i => interactInput = true;
                _playerControls.PlayerActions.Interact.canceled += i => interactInput = false;
                
                // Throw callback context.
                _playerControls.PlayerActions.ThrowObject.performed += i => throwInput = true;
                _playerControls.PlayerActions.ThrowObject.canceled += i => throwInput = false;

                // Zoom callback context.
                _playerControls.PlayerActions.ZoomCamera.performed += i => zoomInput = true;
                _playerControls.PlayerActions.ZoomCamera.canceled += i => zoomInput = false;
            }

            _playerControls.Enable();
        }

        private void OnDisable()
        {
            _playerControls.Disable();
        }

        private void Update()
        {
            UpdateMovementInput();
            UpdateCameraInput();

        }
        
        private void UpdateMovementInput()
        {
            verticalInput = movementInput.y;
            horizontalInput = movementInput.x;
            moveAmount = Mathf.Clamp01(Mathf.Abs(horizontalInput) + Mathf.Abs(verticalInput));
        }
        
        private void UpdateCameraInput()
        {
            cameraInputX = cameraInput.x;
            cameraInputY = cameraInput.y;
        }

        private void UpdateSprintInput()
        {
            
        }

        private void UpdateJumpInput()
        {
            
        }

        private void UpdateCrouchInput()
        {
            
        }

        private void UpdateDashInput()
        {
            
        }

        private void UpdateThrowInput()
        {
            
        }

        private void UpdateZoomInput()
        {
            
        }
    }
}